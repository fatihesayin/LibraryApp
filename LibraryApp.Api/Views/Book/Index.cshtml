@model IEnumerable<LibraryApp.Dto.BookDto>

<!DOCTYPE html>
<html lang="en">
<style>
    .center {
        vertical-align: middle;
        text-align: center;
    }

    .pagination {
        display: inline-block;
        text-align: end;
    }

    .pagination a {
        color: black;
        float: left;
        padding: 8px 16px;
        text-decoration: none;
        transition: background-color .3s;
    }

    .pagination a.active {
        background-color: #4CAF50;
        color: white;
    }

    .pagination a:hover:not(.active) {
        background-color: #ddd;
    }

    .progress-bar-yellow,
    .progress-bar-warning {
        background-color: #f39c12;
    }

    .bg-yellow {
        background-color: #f39c12;
    }

    .progress-bar-primary {
        background-color: #3c8dbc;
    }

    .bg-light-blue {
        background-color: #3c8dbc;
    }

    .badge {}

    .bg-red {
        background-color: #dd4b39 !important;
        color: #fff;
    }

    .bg-yellow {
        background-color: #f39c12;
    }

    .bg-green {
        background-color: #00a65a;
    }

    .mini-image {
        width: 125px;
        height: 125px;
    }
</style>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">


<b style="text-align: end;">Kitapları / Yazarları Arayın
    <input id="query" type="text" placeholder="Ara...">
    <button id="searchButton">Ara</button>
</b>
<table id="example" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th class="center" width="36"></th>
            <th class="center" width="124">Kitap</th>
            <th class="center" width="96">Yazar</th>
            <th class="center" width="48">Durum</th>
            <th class="center" width="25">Kiralayan Kişi - Geri Getirme Tarihi / İşlemler</th>
        </tr>
    </thead>
    <tbody id="books">
    </tbody>
</table>
<div id="pagination" class="pagination">
</div>

</html>
@*Java scripts*@
@section scripts {
    @*External scripts for data table plugins*@
    <script>
        $(document).ready(function () {
            var parameters = getUrlVars();
            $("#searchButton").on("click", function () {
                var value = $('#query').val().toLowerCase();
                if (value.length <= 2) {
                    alert("En az 3 karakter girmeniz gerekmektedir.");
                    return;
                }
                $.ajax({
                    url: "@Url.Action("GetPagedList", "Book")",
                    type: 'GET',
                    data: { currentPage: parameters["currentPage"], pageSize: parameters["pageSize"], query: value },
                    dataType: 'json',
                    success: function (data) {
                        const datalist = document.getElementById('books');
                        datalist.innerHTML = '';
                        fillTable(data.result.books, datalist);
                    },
                    error: function(err){
                        alert($.parseJSON(err).errorMessage);
                    }
                });
            });
        });
        $(document).ready(function () {
            getPagedList();
        });
        function fillTable(books, datalist) {
            var tableItemHtml = "";
            var centerSelector = "center";
            var bgColor = "bg-green";
            for (i = (books.length - 1); i >= 0; i--) {
                var row = datalist.insertRow(0);
                var cell2 = row.insertCell(0);
                cell2 = columnGenerator(cell2, centerSelector, "", books[i].image);
                var cell3 = row.insertCell(1);
                cell3 = columnGenerator(cell3, centerSelector, books[i].name);
                var cell4 = row.insertCell(2);
                cell4 = columnGenerator(cell4, centerSelector, books[i].authorName);
                var cell5 = row.insertCell(3);
                cell5.className = centerSelector;
                cell5.style = "vertical-align: middle";
                var span = document.createElement('span');
                badgeSelector(span, books[i].returnDate);
                cell5.appendChild(span);
                if (books[i].returnDate == null) {
                    var cell6 = row.insertCell(4);
                    cell6.style.verticalAlign = "middle";
                    cell6.className = centerSelector;
                    var borrowElement = document.createElement("button");
                    borrowElement.style.backgroundColor = "green";
                    borrowElement.style.textAlign = "center";
                    borrowElement.innerHTML = "Kirala";
                    borrowElement.id = books[i].id;
                    borrowElement.dataset.id = books[i].id;
                    borrowElement.addEventListener('click', () => {
                        window.location.href = "@Url.Action("Insert", "Borrow")" + "?bookId=" + this.id;
                    });
                    cell6.appendChild(borrowElement);
                } else {
                    var cell6 = row.insertCell(4);
                    cell6 = columnGenerator(cell6, centerSelector, books[i].borrower + " - " + books[i].returnDate)
                }
            }
            return datalist;
        }
        function columnGenerator(column, selector, innerText, imgPath) {
            var reader = new FileReader();
            column.innerHTML = innerText;
            column.className = selector;
            column.style = "vertical-align: middle";
            if (imgPath !== null && imgPath !== undefined) {
                var img = document.createElement('img');
                img.src = "data:image/png;base64," + imgPath;
                img.width = 75;
                img.height = 75;
                column.appendChild(img);
            }
            return column;
        }
        function badgeSelector(span, returnDate) {
            var selector = "display: inline-block;" +
                "min-width: 10px;" +
                "padding: 12px 27px;" +
                "font-size: 16px;" +
                "font-weight: 700;" +
                "line-height: 1;" +
                "color: #fff;" +
                "text-align: center;" +
                "white-space: nowrap;" +
                "vertical-align: middle;" +
                "background-color: #777;" +
                "border-radius: 10px;" +
                "vertical-align: middle;";
            if (returnDate == null) {
                selector += "background-color: #00a65a;";
                span.innerHTML = "Müsait";
            } else if (returnDate > new Date().toISOString()) {
                selector += "background-color: #ffcc00;";
                span.innerHTML = "Kiralandı";
            } else {
                selector += "background-color: #cc3300";
                span.innerHTML = "Gecikti";
            }
            span.style = selector;
        }
        function fillPagination(pageCount) {
            var pageItemHtml = "";
            var parameters = getUrlVars();
            if (pageCount > 1) {
                pageItemHtml += "<a href='Index?currentPage=1&pageSize=10'>&laquo;</a>";
                for (i = 1; i <= pageCount; i++) {
                    if (i == parameters["currentPage"]) {
                        pageItemHtml += "<a href='Index?currentPage=" + i + "&pageSize=10' class='active'>" + i + "</a>"
                    } else {
                        pageItemHtml += "<a href='Index?currentPage=" + i + "&pageSize=10'>" + i + "</a>"
                    }
                }
                pageItemHtml += "<a href='Index?currentPage=" + pageCount + "&pageSize=10'>&raquo;</a>";
            }
            return pageItemHtml;
        }
        function onClickElement(borrow) {
            window.location.href = "@Url.Action("Insert", "Borrow")" + "?bookId=" + borrow.dataset.id;
        }
        $('#pagination').change(function () {
            getPagedList();
        });
        function getPagedList() {
            var parameters = getUrlVars();
            $.ajax({
                url: "@Url.Action("GetPagedList", "Book")",
                type: 'GET',
                data: { currentPage: parameters["currentPage"], pageSize: parameters["pageSize"], query: parameters["query"] },
                dataType: 'json',
                success: function (data) {
                    var datalist = document.getElementById('books');
                    const pageItem = document.getElementById('pagination');
                    fillTable(data.result.books, datalist);
                    pageItem.innerHTML = fillPagination(data.result.pageCount, 1)
                },
                error: function(err){
                    alert($.parseJSON(err).errorMessage);
                }
            });
        }
        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }
    </script>
}